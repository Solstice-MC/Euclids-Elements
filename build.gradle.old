plugins {
	id 'java'
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
}

apply from: rootProject.file('common.gradle')

base.archivesName = mod_id
version = mod_version

allprojects {
	apply plugin: 'java'
	apply plugin: 'maven-publish'
	apply plugin: 'fabric-loom'

	group = mod_group

//	sourceSets {
//		testmod {
//			compileClasspath += main.compileClasspath
//			runtimeClasspath += main.runtimeClasspath
//			resources.srcDirs += [ 'src/testmod/generated' ]
//		}
//	}

	loom {
//		runs {
//			client {
//				source sourceSets.testmod
//				name "Minecraft Client"
//			}
//			server {
//				source sourceSets.testmod
//				name "Minecraft Server"
//			}
//			datagen {
//				source sourceSets.testmod
//				name "Data Generation"
//				ideConfigGenerated = true
//			}
//		}
		mixin {
			useLegacyMixinAp = true
		}
		interfaceInjection {
			enableDependencyInterfaceInjection = true
		}
		enableTransitiveAccessWideners = true
//		createRemapConfigurations(sourceSets.testmod)
	}

	dependencies {
		minecraft "com.mojang:minecraft:${minecraft_version}"
		mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${loader_version}"
		modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
//		testmodImplementation sourceSets.main.output
	}

	java {
		withSourcesJar()
	}

	tasks.withType(ProcessResources).configureEach {
		duplicatesStrategy = DuplicatesStrategy.EXCLUDE
		filesMatching("fabric.mod.json") {
			expand project.properties
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
			}
		}
	}
	tasks.build.finalizedBy publishToMavenLocal
}

subprojects {
	base.archivesName = project.name
	version = module_version

	publishing {
		repositories {
			maven {
				name = "cloudsmith"
				url = "https://maven.cloudsmith.io/solstice-mc/artifacts/"
				credentials {
					username = 'soumeh'
					password = System.env.CLOUDSMITH_API_KEY
				}
			}
		}
	}
}

dependencies {
	afterEvaluate {
		subprojects.each {
			implementation project(path: ":${it.path}", configuration: "namedElements")
//			testmodImplementation project(":${it.path}").sourceSets.testmod.output
			include project(path: ":${it.path}", configuration: "namedElements")
		}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId 'euclids-elements'
		}
	}
}
